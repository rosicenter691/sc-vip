#!/bin/bash
######################################
MYIP=$(curl -sS ipv4.icanhazip.com)
######################################
IPVPS=$(curl -s ipv4.icanhazip.com)
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
echo ""
clear
######################################
# // INSTALL UDP CUSTOM
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
######################################
green="\033[1;32m"
red="\033[1;31m"
# // Gettings Info

domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
######################################
# // USERNAME IZIN IPP
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/rosicenter691/ijin/main/vvip | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/rosicenter691/ijin/main/vvip | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e
######################################
# // DETAIL ORDER IZIN IP
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
######################################
clear
# // DAYS LEFT
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
######################################
# // VPS INFORMATION
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""
######################################
# // AKTIVATED & EXPIRED
Info="\033[92mACTIVED\033[0m"
Eror="\033[91mEXPIRED\033[0m"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS https://raw.githubusercontent.com/rosicenter691/ijin/main/vvip | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Eror}"
fi
######################################
echo -e "\e[32mloading...\e[0m"
clear
######################################
# // GETTINGS SYSTEM
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

clear

######################################
# // RUNNING SSH
######################################
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${green}[ON]${NC}"
else
   status_ssh="${red}[OFF]${NC} "
fi
######################################
# // RUNNING WEBSOCKET
######################################
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}[ON]${NC}"
else
    status_ws_epro="${red}[OFF]${NC} "
fi
######################################
# RUNNING HAPROXY
######################################
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}[ON]${NC}"
else
   status_haproxy="${red}[OFF]${NC} "
fi
######################################
# RUNNING XRAY
######################################
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}[ON]${NC}"
else
   status_xray="${red}[OFF]${NC} "
fi
######################################
# RUNNING NGINX
######################################
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}[ON]${NC}"
else
   status_nginx="${red}[OFF]${NC} "
fi
######################################
# RUNNING DROPBEAR
######################################
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}[ON]${NC}"
else
   status_dropbear="${red}[OFF]${NC} "
fi

######################################

# // UPDATE / REVISI all menu
REVISI="https://nata.serv00.net/v1.8/"

######################################

# \\ Vless account //
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
# \\ Vmess account //
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
# \\ Trojan account //
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(grep -c -E "^#!# " "/etc/xray/config.json")
let ssa=$ssx/2

######################################

# // ----->>> BACKGROUND

BG_GRN="\033[42;1m" # BG HIJAU
BG_RED="\033[45;1m" # BG MERAH
BG_CYN="\033[46;1m" # BG CYANN
BG_BLU="\033[44;1m" # BG BIRU
BG_PUR="\033[43;1m" # BG KUNING
BG_WHT="\033[47;1m" # BG PUTIH

GREN="\033[92m"
# // ----->>> COLOR VALIDATIONS

WHITE="\033[1;37m"
CYAN="\033[96;1m"
BLUE="\033[4;34m"
RED='\033[0;31m'
NC='\033[0m'
clear
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White
UWhite='\033[4;37m'       # White
On_IPurple='\033[0;105m'  #
On_IRed='\033[0;101m'
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White
NC='\e[0m'
# // ----->>> COLOR VALIDATIONS
echo -e " "
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC\033[41m         Welcome To Script Premium Rosi Store           $NC${z}│$NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC NGINX$NC: $status_nginx ${WHITE}WS-EPRO$NC: $status_ws_epro ${WHITE}DROPBEAR$NC: $status_dropbear ${WHITE}HAPROXY$NC: $status_haproxy   $NC${WHITE}$NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y System OS ${NC}  $Blue=$NC $MODEL${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y Core Cpu ${NC}   $Blue=$NC $CORE${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y Server RAM ${NC} $Blue=$NC $uram/$RAM MB $NC"
echo -e " ${z}│$NC$r ⇲ $NC$y City ${NC}       $Blue=$NC $CITY${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y Cpu Usage ${NC}  $Blue=$NC $cpu_usage${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y Domain ${NC}     $Blue=$NC $domain${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y IP VPS ${NC}     $Blue=$NC $IPVPS${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y ISP ${NC}        $Blue=$NC $ISP${NC}"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${WHITE}       SSH: $ssh1 TROJAN : $trb SS-R : $ssa VLESS : $vla VMESS : $vma ${NC}"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$y Status $NC     $Blue=$NC ${sts}"
echo -e " ${z}│$NC$r ⇲ $NC$y Username $NC   $Blue=$NC $username "
echo -e " ${z}│$NC$r ⇲ $NC$y Active $NC     $Blue=$NC $exp / $certifacate Days$NC "
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}╭═════════════════════════╤════════════════════════════════╮${NC}"
echo -e " ${z}│$NC [${r}01${NC}]$purple SSH / OPENVPN ${NC}     ${z}│$NC   [${r}06${NC}]$purple BACKUP / RESTORE $NC" 
echo -e " ${z}│$NC [${r}02${NC}]$purple XRAY MANAGER ${NC}      ${z}│$NC   [${r}07${NC}]$purple BOT TELEGRAM $NC"  
echo -e " ${z}│$NC [${r}03${NC}]$purple XRAY TROJAN ${NC}       ${z}│$NC   [${r}08${NC}]$purple UPDATE SCRIPT $NC"  
echo -e " ${z}│$NC [${r}04${NC}]$purple SLOWDNS ${NC}           ${z}│$NC   [${r}09${NC}]$purple SETTING $NC"
echo -e " ${z}│$NC [${r}05${NC}]$purple NOOBZVPNS ${NC}         ${z}│$NC   [${r}00${NC}]$purple EXIT $NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " "
read -p " Select Options : " wZtXtQ
case $wZtXtQ in
1)
clear
m-ssh
;;
2)
clear
m-xray
;;
3)
clear
m-tro
;;
4)
clear
sd
;;
5)
clear
m-noobz
;;
6)
clear
m-bkp
;;
7)
clear
m-bot
;;
8)
clear
wget https://raw.githubusercontent.com/rosicenter691/sc-vip/main/update.sh && chmod +x update.sh && ./update.sh
;;
9)
clear
m-ftr
;;
00)
clear
exit
;;
esac
